#WEB2 - CSS
HTML에 비해, 웹페이지를 조금 더 아름답게 디자인 하고자 하는 욕구때문에 나온 것


#CSS 등장 이전의 상황
HTML에 디자인에 대한 태그를 만든다.
<font>		: font는 정보를 가지고 있는 것이 아니라 단순히 빨간색으로 표시한다는 것이다.
		: font를 사용함으로써 정보를 의미하는 HTML의 의미가 회손되었다.


#CSS의 등장
HTML에서 주석을 표시하는 방법 <!-- -->
웹브라우저는 HTML만을 해석했다.

<style>		: style은 HTML의 tag로, <style></style> 안쪽에 있는 것은 CSS의 문법에 맞게 해석해라 라는 tag 명령어
	a{				// Selector
		color: red;		// Declaration
					// color는 property(속성), red는 value로, color property가 가지고 있는 값이다.
	}
</style>
		: CSS가 없고 만약 a tag가 1억개가 있다면, 1억개를 하나하나 바꿔야 하는데, CSS를 통해 중복된 코드를 하나의 코드를 통해서 변경할 수 있다.
		: <body> tag안에 있는 것이 아니라, <head> tag 안에 있다.
		: HTML이 정보에 집중할 수 있도록 해준다.
		: 어디까지가 CSS고 어디부터 HTML인지 알려주는 tag이다.


#혁명적 변화
<li><a href="2.html" target="_blank" title="CSS" style="color: red"> CSS </a></li>에서 style이라는 속성이 중요하다.
style 속성은 html과 css의 사용 설명서에 적혀있는데, style이라는 속성을 쓰면, 그 속성의 값을 웹브라우저는 CSS의 문법에 따라 해석해서, 그 css의 문법에 따라 해석된 결과를 style 속성이 위치하고 있는 이 태그에 적용할 것이다.
style="color: red"은 html의 속성이고 속성의 값은 CSS의 효과가 들어온다.

<style> tag는 누구에게 줄 것인가라는 것을 선택한다 라는 점에서, 선택자라고 부른다. 영어로는 selector.
color: red; 는 효과라고 부르고, 영어로는 declaration (선언)이라고도 한다.

웹페이지에서 css를 쓰는 방법 2가지. <style> tag를 쓰는 방법과 style 속성을 사용한다.
;을 통해 구문을 구분한다.


#CSS 속성을 스스로 알아내는 방법
property를 검색하여 알아낼 수 있다.


#CSS 선택자를 스스로 알아내는 방법	-선택자에 대한 중요한 토대를 닦는다.
<!-- 방문한 적이 있는 페이지는 회색으로, 현재 머물고 있는 페이지는 빨간색으로 표시하고자 한다. -->
HTML, CSS(페이지)를 하나의 묶음으로 쓰려고자 한다면 class tag를 사용하면 된다. 그리고 font color를 회색으로 주면 된다.
class ="saw" 에서 class와 "~~~"는 모두 HTML tag이다.	saw라는 class값을 갖는 tag 2개를 만들어싿.
saw라는 class 값을 가지고 있는 모든 태그에 대해서 폰트 컬러를 gray로 주고 싶은 상태이다.

saw{     color: gray;    }		: 이렇게 <style> tag안에 적는다면, 이 웹페이지의 모든 saw라는 이름의 태그를 선택하는 선택자이기 때문에, 우리가 하고 싶은 class 값이 saw인 tag에 색을 gray로 바꾸자고 하는 것을 할 수 없다.
.saw{	color: gray;  }		: 이렇게 saw{     color: gray;    } 앞에 .을 적으면 class의 값이 saw인 tag를 가리키는 선택자가 된다.

class라고 하는 것은 같은 의도에 따라 학생들을 하나로 그룹핑할 때, 쓰는 말이 class다. 즉, class라는 말 안에는 그룹핑(grouping)하다, 하나로 묶는다 라는 뜻이 있다.

tag 선택자( ex) h1), id 선택자( ex) id = "active"), class 선택자( ex) .saw)에서 id 선택자가 가장 강하고, 다음 class 선택자, 그 다음이 tag 선택자 순으로 강하다(우선 순위가 높다). 
전부 같은 종류의 선택자라면, 제일 마지막에 나온 선택자가 힘이 가장 강하다(우선순위가 높다).
왜냐하면 id 선택자는 쓰인다면 한번만 써야하기 때문이다. 예를 들어 학교에서 id카드는 그 학생을 구별할 수 있는 선택자로, id는 중복이 되면 안되기 때문이다. 즉, 유일무이한 것이다.
tag 선택자가 id 선택자, class 선택자보다 보편적이다. 그래서 우선 순위가 낮다.
보편적인것은 tag 선택자로 대부분 선택하고, 예외적인 것만 id 선택자로 콕콕 찝어서 수정하다보니, 보편성이 낮은 id선택자가 우선 순위가 높다.


#박스모델		<!-- 디자인 하는 과정을 시작한다 -->
<h1>는 제목 tag로 화면 전체를 쓰는 것이 기본적으로 더 편하기 때문에, 다른 것과 줄바꿈이 나타난다.
<a> tag는 줄바꿈을 하지 않고 딱 자기의 콘텐츠 크기만큼을 쓴다.
화면 전체를 쓰는지 부분을 쓰는지 알 수 있는 방법은 페인트를 칠하는 것과 같은 방식으로, 테두리를 그리는 것으로 할 수 있다.
화면 전체를 쓰지 않고 자기의 콘텐츠 크기만큼 공간을 쓰는 것들을 inline element라고 한다.
화면 전체를 쓰는 것들을 block level element라고 한다.

display: none 하면 화면에서 안보이게 할 수 있다.
display: block 하면 화면 전체를 사용으로 바꿀 수 있다. 
display: inline 하면 자기의 콘텐츠 크기만큼 사용으로 바꿀 수 있다.

두개의 tag가 같은 속성의 값을 가질때 중복이 발생하는데, h1, a{ 속성: 속성값 들} 이렇게 ','라는 선택자를 적어서 중복을 피할 수 있다.
border: 5px solid red; 		: 속성 값에서 중복이 발생하면 옆에 있는 것처럼 코드를 작성하여 중복을 줄일 수 있다. 속성의 구분은 ' ' 띄어쓰기를 통해 가능하다.
/**/를 하면 주석을 사용할 수 있다.

padding		: 테두리와 컨텐츠의 공간을 결정하는 속성
margin		: 테두리와 테두리 사이의 공간을 결정하는 속성
width		: 폭을 결정하는 속성
//css box model 을 검색하면 나온다.
//해당 페이지에서 우클릭을 하고 검색을 클릭하면 행당 페이지의 구성이 어떻게 되어있는지를 알 수 있다.
























